<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Push Notifications</title>
</head>
<body>
  <h1>Push Notifications with Service Worker</h1>
  <p id="status"></p>

  <script>
    // Eðer tarayýcý Service Worker'ý destekliyorsa
    if ('serviceWorker' in navigator && 'PushManager' in window) {
      // Service Worker'ý kaydetme
      navigator.serviceWorker.register('/service-worker.js')
        .then(registration => {
          console.log('Service Worker registered:', registration);

          // Bildirim izni isteme
          return Notification.requestPermission();
        })
        .then(permission => {
          if (permission === 'granted') {
            console.log('Notification permission granted.');
            // Push bildirimlerine abone olma
            subscribeUserToPush();
          } else {
            console.log('Notification permission denied.');
          }
        })
        .catch(error => {
          console.error('Service Worker registration failed:', error);
        });
    } else {
      console.warn('Service workers or PushManager are not supported in this browser.');
    }

    // Push bildirimlerine abone olma
    function subscribeUserToPush() {
      navigator.serviceWorker.ready.then(registration => {
        registration.pushManager.subscribe({
          userVisibleOnly: true,  // Kullanýcý görsel bildirim alacak
          applicationServerKey: urlB64ToUint8Array('<YOUR_PUBLIC_VAPID_KEY>')  // Public VAPID key
        }).then(subscription => {
          console.log('User is subscribed:', subscription);

          // Burada server'a abone bilgilerini gönderebilirsiniz
          // Örnek: POST isteði ile server'a gönderebilirsiniz.
        }).catch(err => {
          console.error('Failed to subscribe the user:', err);
        });
      });
    }

    // Base64 URL kodunu Uint8Array'e dönüþtürme fonksiyonu (VAPID anahtar için)
    function urlB64ToUint8Array(base64String) {
      const padding = '='.repeat((4 - base64String.length % 4) % 4);
      const base64 = (base64String + padding)
        .replace(/\-/g, '+')
        .replace(/_/g, '/');

      const rawData = atob(base64);
      const outputArray = new Uint8Array(rawData.length);

      for (let i = 0; i < rawData.length; i++) {
        outputArray[i] = rawData.charCodeAt(i);
      }

      return outputArray;
    }
  </script>
</body>
</html>
